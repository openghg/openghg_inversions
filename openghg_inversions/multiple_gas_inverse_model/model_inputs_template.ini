[GENERAl_AND_MCMC]
; mcmc_type (str) 
;   Define the model run type, e.g. 'real-fixedR' or 'pseudo'.
;   Options for: 'pseudo' or 'real' and 'fixedR' or 'varR'. 'fixedR' or 'varR' does not have to be specified if running in 1-gas mode.
; input_type (str):
;   Read in inputs from the ACRG shared workspace 'acrg' or an openghg object store 'openghg'.
; new_setup (bool):
;   If True, runs the footprints_data_merge etc. process and saves this. If False, extracts merged data from a pickle file.
; full_output (bool):
;   By default (False) output file only contains posterior means and uncertainties and minimal other varibles.
;   If True, output file contains a full set of variables, but be aware this file is very large (up to 4Gb when using lots of inputs).
; data_path (str):
;   Path to the ACRG or user data area, if using the ACRG workspace, or the path to an openghg object store.
; directories (dict of str):
;   Paths to alternative obs, fp, flux, bc, fp_basis, bc_basis and merged_data directories, if not in data_path. If None, uses defaults.
;   If using an openghg object store, fp_basis, bc_basis and merged_data need to be specified separately.
; num_iter (int) 
;   Total number of iterations.
; post_av (int) 
;   The proportion of iterations used to calculate the posterior means, e.g. 0.5 uses the last 50% of 
;   the traces to produce posteriors.
; n_trace_samples (int)
;   Value used to subsample each MCMC trace before producing the posterior PDFs. 
;   e.g. 100 means that every 100th value of the trace is kept.
; start_date (str) 
;   Of format 'YYYY-MM-DD'
; end_date (str) 
;   Of format 'YYYY-MM-DD'. The code has only been tested and used with monthly runs.
; domain (str) 
;   Study domain, e.g. 'EUROPE' or 'USA'.
; species (list of str) 
;   Gas species for inversion, e.g. ['ch4','c2h6'].
;   Emissions and ratios are used relative to the first gas so if using for ch4, ch4 must be the first gas.
; species_type (list of str)
;   Type of gas species, used to determine how the obs are modelled by the inversion, 
;   options for 'mf' (mole fraction) or 'delta_value', e.g. ['mf','delta_value','delta_value'].
; countrymask (str):
;   Mask used to estimate country flux. If None, uses the country-ukmo file for the EUROPE domain.
; countires (list of str):
;   List of countries to estimate country fluxes for. If None, does this for all countries in the countryfile.

mcmc_type = 'real-varR'
input_type = 'acrg'
new_setup = False
full_output = False

data_path = '/user/work/cv18710/'
directories = {'obs':None,'fp':'/group/chemistry/acrg/LPDM/fp_NAME/','flux':None,'bc':None,'fp_basis':None,'bc_basis':None,'merged_data':None}

num_iter = 5000
post_av = 0.5
n_trace_samples = 100

start_date = "2022-01-01"
end_date = "2022-02-01"
domain = "EUROPE"
species = ["ch4",'c2h6','dch4c13','dch4d']
species_type = ['mf','mf','delta_value','delta_value']

countrymask = None
countries = None

[OBS]
; sites (list of list of str):
;   Observation sites for all gases, in the same order as species e.g. [['MHD','TAC','HFD'],['HFD'],['HFD']].
; heights1 (list of list of str):
;   Inlet heights for all gases, in the same order as species, e.g. [['10m','185m','100m'],['100m'],['100m']].
; network (list of list of str): 
;   Corresponding network names for sites.
; average (list of str):
;   Time period over which to average observations of each gas, e.g. ["2H',"2H","2H"].
; data_filtering (bool):
;   If True, applies filters specified in filtering_types.
; filtering_types (list of list of str) (optional):
;   Filters to apply to observations of each gas. Options for 'localness', 'pblh-aircraft' and 'pblh-site',
;   e.g. [['localness','pblh-site'],[None],[None]].
; obs_dir (str) (optional):
;   Path to directory containing observations, if you want to specify anything other than default.
; y_sig_pdf (str) (optional):
;   Model error PDF. Options for 'uniform' or 'truncnorm'.
; y_sig_mu (list of list of float) (optional):
;   Model error apriori mean applied to observations from each gas, for each site, 
;   e.g. [[5.,5.,5.],[5.,5.],[0.05,0.05]]. 
; y_sig_range (list of list of float) (optional):
;   Min and max values for the model error PDF, for each species e.g. [[0.,50.],[0.,30.],[0.,0.1]].
; y_sig_freq (str) (optional):
;   Time frequency over which to esimate model error, e.g. 'monthly' or '24H'. For infrequent observations, 
;   sig_freq other than 'monthly' may not work correctly.
; y_cov (bool):
;   If True, use model-measurment error covariance for the ch4+ch4c12 model, where there is covariance
;   between ch4 and modelled ch4c12 observations.
; ac_timescale_hours (int) (optional):
;   The autocorrelation timescale in hours, used to produce off-diagonal covariances in the model-measurement 
;   covarance matrix, e.g. 12.

sites = [['MHD','TAC','HFD'],['MHD','TAC'],['HFD'],['HFD']]
heights = [['10m','185m','100m'],['10m','185m'],['100m'],['100m']]
network = [['AGAGE','DECC','DECC'],['AGAGE','DECC'],['DECC'],['DECC']]
average = ["2H","2H","2H","2H"]
data_filtering = False
filtering_types = [['localness','pblh_site'],[None],[None],[None]]

y_sig_pdf = 'uniform'
y_sig_mu = [[10.,10.,10.],[15,15],[0.05],[0.05]]
y_sig_range = [[0,50.],[0.,50.],[0.,0.1],[0.,0.1]]

y_sig_freq = 'monthly'
y_cov = False
ac_timescale_hours = None

[FLUXES]
; sectors (list of list of str):
;   Short sector names corresponding to fluxes for each gas
; flux_name (list of list of str):
;   A priori flux/delta value for each sector for each gas, in format [[sector1gas1,sector2gas1],[sector1gas2,sector2gas2]].
; fp_basis_name (str):
;    Basis function file name, if not using quadtree basis functions.
; output_name (str):
;   Short description of flux, basis etc. types, used to name fp_data_H object and model outputs.
; nquadtreebasis (int) (optional):
;   Number of cells used by the quadtree function to divide up the domain into areas over which to estimates emissions.

sectors = [['FF','nonFF'],['FF',None],['FF','nonFF'],['FF','nonFF']]

flux_name = [['ch4-edgar-ukghg-fftotal','ch4-edgar-ukghg-nonfftotal'],
             ['c2h6-edgar-ukghg-fftotal-0075r','c2h6-edgar-ukghg-biototal-0r'],
             ['ch4c13-source-signatures-40','ch4c13-source-signatures-58'],
             ['dch4d-source-signatures-194','dch4d-source-signatures-317']]

fp_basis_name = None

output_name = 'edgar-ukghg'

nquadtreebasis = 50

[X_AND_BC]
; x_pdf (str):
;   Prior PDF for emissions, options for 'normal' or 'truncorm'.
; x_range (list of float):
;   Prior PDF limits for emissions, for use with 'truncnorm' PDFs, e.g. [0,50.] limits x values to between 0. and 50.
; x_sig (list of float):
;   Prior emissions uncertainty, as a propotion, e.g. [0.5,0.5] is 50% uncertainty on emissions from both sectors.
; use_bc (bool):
;   If True, model uses a priori boundary conditions and solves for boundary conditions scaling factors.
; bc_basis_name (str) (optional):
;   Basis function file for boundary conditions, e.g. 'NESW'.
; xbc_pdf (str) (optional):
;   Prior PDF for boundary conditions, options for 'normal', or 'truncnorm'.
; xbc_range (list of float):
;   Prior PDF limits for boundary condition scaling factors. Applies to all mf species.
; xbc_sig (list of float) (optional):
;   Prior boundary conditions uncertainty for each gas, as a proportion, e.g. [0.05,0.5] is 5% uncertainty on
;   gas1 boundary conditions and 50% uncertainty gas2 boundary conditions.

x_pdf = 'truncnorm'
x_range = [0,50.]
x_sig = [0.5,0.5]

use_bc = True
bc_basis_name = 'NESW'

xbc_pdf = 'truncnorm'
xbc_range = [0.,50.]
xbc_sig = [0.05,0.05,0.5,0.5]

[PSEUDO_DATA]
; x_true (list) (optional):
;   'True' scaling factors used to create observations in the pseudo data tests, e.g. [2.0,0.5].
; x_mu_factor (list) (optional):
;   Used to scale x_true to create incorrect flux priors, for use in pseudo data tests, e.g. [1.2,0.8].
; x_sig_factor (list) (optional):
;   Used to scale x_true to create apriori flux uncertainty, for use in pseudo data tests, e.g. [0.5,0.5] is 50%
;   uncertainty on emissions from each sector.
; flux_name_prior (list of list of str) (optional):
;   A priori fluxes for each sector for each gas, used in pseudo data tests to specify a different emissions prior than that
;   used to produce the observations.
; noise_type (str) (optional):
;   If 'systematic', systematic noise equal to 10% of the size of each modelled observation will also be added
;   to the modelled observations. If 'correlated', adds correlated noise to gas 2; used for the ch4+12ch4 model.

x_true = None
x_mu_factor = None
x_sig_factor = None

flux_name_prior = None

noise_type = None

[R]
; R_pdf (list of str) (optional):
;   Prior PDF for emission ratio R for each secondary gas, options for 'uniform', 'normal' or 'truncnorm'.
; R_min (list of list of float) (optional):
;   Prior PDF minima for the emission ratios for each sector, 
;   in format [[min_R1_sector1,min_R1_sector2],[min_R2_sector1,min_R2_sector2]].
; R_max (list of list of float) (optional):
;   Prior PDF maxima for the emission ratios for each sector, 
;   in format [[max_R1_sector1,max_R1_sector2],[max_R2_sector1,max_R2_sector2]].
; R_sig (list of list of float) (optional):
;   Prior ratio uncertainty, as a propotion, e.g. [0.2,0.2] is 20% uncertainty on emissions from both sectors,
;   in format [[sig_R1_sector1,sig_R1_sector2],[sig_R2_sector1,sig_R2_sector2]]
; R_mu (list of list of floats) (optional):
;   Prior ratio means, for use in pseudo data data tests where the model is given incorrect ratio priors, e.g. [1.2,0.8].
; n_ratio_sectors (list of int) (optional):
;   Number of sectors with corresponding emission ratios, e.g. 1 for c2h6 as the secondary gas, 2 for isotopes as the
;   secondary gas.
; spatialR (bool) (optional):
;   If True, solves for ratios on the same spatial scale as emissions (governed by the basis functions). If False, solves for
;   one emission ratio per sector per gas across the whole domain.

R_pdf = ['truncnorm','truncnorm','truncnorm']
R_min = [[0.1,0.],[-45,-74],[-250,-400]]
R_max = [[2.7,0.],[-25,-45],[-100,-250]]
R_sig = [[0.5,0.],[6.70,10.33],[50,33]]
R_mu = [[1.0,0.],[-40,-58],[-194,-317]]

Rbc_pdf = [None,'truncnorm','truncnorm']
Rbc_min = [None,-49,-150]
Rbc_max = [None,-46,-50]
Rbc_sig = [None,5.0,10]
Rbc_mu = [None,-47.3,-95]

spatialR = True

[OUTPUT]
; post_save_name (str):
;   Descriptive name for type of test run, used in output file name with 'post_save_name'_post.nc. If 'None', does not save output.
; post_save_dir (str):
;  Path to save output. This is currently "data_path/posterior/post_save_dir"

post_save_name = 'test'
post_save_dir = "/user/work/cv18710/posterior/multi_gas_testing/"