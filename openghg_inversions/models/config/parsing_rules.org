#+title: Model configuration specification

* Specifing nodes of a graph via a toml file
The basic idea of the model configuration is that a Bayesian model in PyMC is a graph specifying dependencies between random variables.

We can specify a graph using standard configuration file formats, like ~toml~:
- each "heading" is a node
- edges are automatically added from headings to their subheadings
- edges can be specified explicitly by declaring that one heading an input to another heading

The nodes we specify are higher level than random variables. For instance, we may specify

* Parsing Rules

1. Each heading represents a ~ModelComponent~
   1. The name of this component is the the last part of the dotted key. For instance, the name of "foward.flux" is "flux"
   2. Each ~ModelComponent~ must be built by its parent. For instance the component named "flux" from the heading "forward.flux" must be built by the component named "forward."
   3. The parent-child relationship is defined by heading-subheading relationships, or by naming another component as an "input"
2. The "type" of a component should match (after replacing whitespace with "_") the registered name of a ~ModelComponent~
   1. If no type is specified, then a component is created that simply builds its children.


* The ~ModelComponent~ class
